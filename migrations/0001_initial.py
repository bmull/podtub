# Generated by Django 3.0.5 on 2020-06-23 01:21

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion
import redwoodlabs.helpers
import s3direct.fields


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
        ('dashboard', '0097_podcast_disqus_shortname'),
    ]

    operations = [
        migrations.CreateModel(
            name='VideoSyncPodcast',
            fields=[
                ('id', models.BigIntegerField(default=redwoodlabs.helpers.generate_random_id, primary_key=True, serialize=False)),
                ('name', models.CharField(max_length=128)),
                ('slug', models.SlugField(max_length=128, unique=True)),
                ('image_path', s3direct.fields.S3DirectField(blank=True, help_text='The cover image that shows on Apple Podcasts, etc...', null=True, verbose_name='Podcast Artwork')),
                ('primary_color', models.CharField(blank=True, help_text='Hex code (#______) to use as the highlight color in images', max_length=6, null=True)),
                ('secondary_color', models.CharField(blank=True, default='FFFFFF', help_text='Hex code (#______) to use as the alternative color in images', max_length=6, null=True)),
                ('logo_path', s3direct.fields.S3DirectField(blank=True, help_text='Optional, but can be used for artwork.', null=True, verbose_name='Podcast Logo')),
                ('font_name', models.CharField(blank=True, help_text='Enter the name of any font from fonts.google.com.', max_length=200, null=True, verbose_name='Font')),
                ('default_template', models.CharField(blank=True, help_text='This is the default template used for new episodes', max_length=100, null=True)),
                ('youtube_channel_name', models.CharField(blank=True, max_length=100, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('related_podcast_object', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Podcast')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoSyncEpisode',
            fields=[
                ('id', models.BigIntegerField(default=redwoodlabs.helpers.generate_random_id, primary_key=True, serialize=False)),
                ('text', models.CharField(blank=True, max_length=250, null=True)),
                ('season', models.IntegerField(blank=True, help_text='Leave blank if your podcast does not have seasons', null=True, verbose_name='Season Number')),
                ('number', models.IntegerField(blank=True, null=True, verbose_name='Episode Number')),
                ('image_path', s3direct.fields.S3DirectField(blank=True, help_text='Photo of guest, or drawing, or other graphic', null=True, verbose_name='Episode Image')),
                ('template', models.CharField(blank=True, max_length=100, null=True)),
                ('artwork_path', models.URLField(blank=True, max_length=500, null=True)),
                ('video_path', models.URLField(blank=True, max_length=500, null=True)),
                ('youtube_url', models.URLField(blank=True, max_length=500, null=True)),
                ('create_time', models.DateTimeField(auto_now_add=True)),
                ('update_time', models.DateTimeField(auto_now=True)),
                ('podcast', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videosync.VideoSyncPodcast')),
                ('related_episode_object', models.OneToOneField(blank=True, null=True, on_delete=django.db.models.deletion.CASCADE, to='dashboard.Episode')),
            ],
            options={
                'ordering': ['-related_episode_object__published'],
            },
        ),
    ]
